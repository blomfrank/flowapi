openapi: 3.0.0
servers:
  - description: Ontwikkel server
    url: 'https://teamplatform-ontwikkel.azurewebsites.net/data/iris'
info:
  description: This is the IRIS REST API for Flow
  version: 1.0.0
  title: IRIS REST API
  contact:
    email: support@kubion.nl
    name: Kubion Team plaform
tags:
  - name: Instance
  - name: Flow
  - name: Table
  - name: Type
paths:
  '/flow//instance/{code}/init':
    parameters:
      - schema:
          type: string
        name: code
        in: path
        description: The code of the flow that should be started.
        required: true
    post:
      operationId: createandstartflow
      summary: 2. Create and start a new session
      tags:
        - Instance
      parameters:
        - in: query
          name: dev
          schema:
            type: boolean
          description: If this is a development (test) session
          allowEmptyValue: true
        - in: query
          name: debug
          schema:
            type: boolean
          required: false
          description: If debug info should be included in the response
        - schema:
            type: string
            example: 'Bearer {token}'
          in: header
          name: Authorization
          description: Contains the token received with the operation /auth. This is needed to get access.
          required: true
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
          description: Defines the format of the response
          required: true
      responses:
        '200':
          description: Flow initialized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLOWResult'
              examples:
                example:
                  value:
                    elements:
                      - type: display
                        data:
                          text: |-
                            Coordineer de oplossing en kies de juiste bewaking.
                            Wat moet er met de klacht gebeuren?
                      - type: select
                        data:
                          outputKey: choice
                          list:
                            - value: 0
                              text: Spoedeisend (<2 werkdagen)
                            - value: 1
                              text: Normaal (<10 werkdagen)
                            - value: 2
                              text: Klacht afwijzen
                    _requireComment: false
                    ID: 1425
                    debug:
                      - id: 3k8itoecmyl4efp9
                        state:
                          ruimte: slaapkamer
                          element: kraan
                        activeNode:
                          id: 7
                          label: Beoordelen klacht
                          trace:
                            completedLabel: Klacht beoordeeld
                          deadline:
                            duration: PT8H
                            nodeId: 0
                          handler:
                            handlerId: 1014
                          actions:
                            - data:
                                name: Ask_question
                                stateObj:
                                  question: |-
                                    Coordineer de oplossing en kies de juiste bewaking.
                                    Wat moet er met de klacht gebeuren?
                                  options:
                                    - text: Spoedeisend (<2 werkdagen)
                                      type: transition
                                      value: 11
                                    - text: Normaal (<10 werkdagen)
                                      type: transition
                                      value: 12
                                    - text: Klacht afwijzen
                                      type: transition
                                      value: 13
                                configObj: {}
                                outputKey: ''
                        code: Klachten
                        trace:
                          - 7
                      - id: ipfjn4lh7fi12d0-
                        state:
                          question: |-
                            Coordineer de oplossing en kies de juiste bewaking.
                            Wat moet er met de klacht gebeuren?
                          options:
                            - text: Spoedeisend (<2 werkdagen)
                              type: transition
                              value: 11
                            - text: Normaal (<10 werkdagen)
                              type: transition
                              value: 12
                            - text: Klacht afwijzen
                              type: transition
                              value: 13
                        activeNode:
                          id: 1
                          label: Start
                          actions:
                            - data:
                                elements:
                                  - type: display
                                    data:
                                      $text: question
                                  - type: select
                                    data:
                                      outputKey: choice
                                      $list: 'options.map((option, index) => ({value: index, text: option.text}))'
                                $_requireComment: '(state._requireComment !== undefined ? state._requireComment : false)'
                            - data:
                                stateObj: {}
                                configObj: {}
                                outputKey: ''
                                $name: 'options[choice].value'
                              conditionText: "options[choice].type == 'flow'"
                            - data:
                                $nodeId: 'options[choice].value'
                              conditionText: "options[choice].type == 'transition'"
                            - data:
                                output: ''
                        code: Ask_question
                        trace:
                          - 1
                    deadline: false
        '404':
          description: There is no flow with code ...
        '500':
          description: Internal Server Error
      requestBody:
        description: Key/value pairs that will be put into flow state. These parameters can be used in the flow and will work immediately.
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
            examples:
              example:
                value:
                  ruimte: slaapkamer
                  element: kraan
      description: This operation creates a flow and will start it immediately.
  '/flow/instance/{id}/continue':
    post:
      summary: 3. Continue/advance an existing session
      tags:
        - Instance
      parameters:
        - in: query
          name: debug
          schema:
            type: boolean
          required: false
          description: If debug info should be included in the response
        - schema:
            type: string
          in: header
          name: Authorization
          description: Contains the token received with the operation /auth. This is needed to get access.
          required: true
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
          description: Defines the format of the response
          required: true
        - schema:
            type: boolean
          in: query
          name: dev
          description: If debug info should be included in the response
      responses:
        '200':
          description: Flow advanced successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLOWResult'
              examples:
                example:
                  value:
                    elements:
                      - type: display
                        data:
                          text: |-
                            Coordineer de oplossing en kies de juiste bewaking.
                            Wat moet er met de klacht gebeuren?
                      - type: select
                        data:
                          outputKey: choice
                          list:
                            - value: 0
                              text: Spoedeisend (<2 werkdagen)
                            - value: 1
                              text: Normaal (<10 werkdagen)
                            - value: 2
                              text: Klacht afwijzen
                    _requireComment: false
                    ID: 1425
                    debug:
                      - id: 3k8itoecmyl4efp9
                        state:
                          ruimte: slaapkamer
                          element: kraan
                        activeNode:
                          id: 7
                          label: Beoordelen klacht
                          trace:
                            completedLabel: Klacht beoordeeld
                          deadline:
                            duration: PT8H
                            nodeId: 0
                          handler:
                            handlerId: 1014
                          actions:
                            - data:
                                name: Ask_question
                                stateObj:
                                  question: |-
                                    Coordineer de oplossing en kies de juiste bewaking.
                                    Wat moet er met de klacht gebeuren?
                                  options:
                                    - text: Spoedeisend (<2 werkdagen)
                                      type: transition
                                      value: 11
                                    - text: Normaal (<10 werkdagen)
                                      type: transition
                                      value: 12
                                    - text: Klacht afwijzen
                                      type: transition
                                      value: 13
                                configObj: {}
                                outputKey: ''
                        code: Klachten
                        trace:
                          - 7
                      - id: ipfjn4lh7fi12d0-
                        state:
                          question: |-
                            Coordineer de oplossing en kies de juiste bewaking.
                            Wat moet er met de klacht gebeuren?
                          options:
                            - text: Spoedeisend (<2 werkdagen)
                              type: transition
                              value: 11
                            - text: Normaal (<10 werkdagen)
                              type: transition
                              value: 12
                            - text: Klacht afwijzen
                              type: transition
                              value: 13
                        activeNode:
                          id: 1
                          label: Start
                          actions:
                            - data:
                                elements:
                                  - type: display
                                    data:
                                      $text: question
                                  - type: select
                                    data:
                                      outputKey: choice
                                      $list: 'options.map((option, index) => ({value: index, text: option.text}))'
                                $_requireComment: '(state._requireComment !== undefined ? state._requireComment : false)'
                            - data:
                                stateObj: {}
                                configObj: {}
                                outputKey: ''
                                $name: 'options[choice].value'
                              conditionText: "options[choice].type == 'flow'"
                            - data:
                                $nodeId: 'options[choice].value'
                              conditionText: "options[choice].type == 'transition'"
                            - data:
                                output: ''
                        code: Ask_question
                        trace:
                          - 1
                    deadline: false
        '201':
          description: Created
        '500':
          description: There is no session with id ...
      requestBody:
        description: Key/value pairs that will be put into flow state. In every step new parameters can be loaded or overwritten.
        content:
          application/json:
            schema:
              type: object
            examples:
              example:
                value:
                  ruimte: slaapkamer
                  element: kraan
      description: This operation will ask flow to go further and go to the next node.
      operationId: ContinueFlow
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: This is the ID of the flow instance retrieved with the operation /init
  '/flow/instance/{id}/back':
    post:
      summary: 4. Revert an existing session to the previous step
      tags:
        - Instance
      parameters:
        - in: query
          name: debug
          schema:
            type: boolean
          required: false
          description: If debug info should be included in the response
        - schema:
            type: string
          in: header
          name: Authorization
          description: Contains the token received with the operation /auth. This is needed to get access.
          required: true
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
          description: Defines the format of the response
          required: true
        - schema:
            type: string
          in: query
          name: dev
          description: If debug info should be included in the response
      responses:
        '200':
          description: Flow reverted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FLOWResult'
        '404':
          description: There is no session with id ...
        '500':
          description: Internal Server Error
      operationId: GoBackinFlow
      description: |
        Goes one step back in the flow. Does an undo on the current node.
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /auth:
    parameters: []
    post:
      tags:
        - Instance
      summary: 1. Requests an authorization token
      operationId: post-Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
              examples:
                example:
                  value:
                    user:
                      ID: 2078
                      fullName: Eline de Groot
                      profileImage: ../publishedMedia/d8c3d988096c26f20e1bb6b73bc4beef.jpeg
                      language: nl
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjA3OCwibmFtZSI6IkVsaW5lIGRlIEdyb290IiwiZXh0ZXJuSUQiOiIyMDc4IiwiaWF0IjoxNTkyMDQyMTkxLCJleHAiOjE1OTIwNDU3OTF9.rLKXWgYc30zlFSkDly2H1wXoPl_GJiXbDjQklaOZZFc
                    refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjA3OCwibmFtZSI6IkVsaW5lIGRlIEdyb290IiwiaWF0IjoxNTkyMDQyMTkxLCJleHAiOjE1OTIxMjg1OTF9.QHNm4Mfx3vJB6s7n5YiT8DgSeIkZcv_QXGrqZd9Nf34
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                loginName:
                  type: string
                  description: loginname that is used for logging in
                password:
                  type: string
                  format: password
                  description: password that matches with the loginname
              required:
                - loginName
                - password
            examples:
              example:
                value:
                  loginName: eline.de.groot@woonplezier.nu
                  password: xxxxxxxx
          application/xml:
            schema:
              type: object
              properties: {}
        description: The request body should contain the loginname and password of the user that requests a new token.
      description: With this operation a token can be requested.
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-Type
          description: application/json
components:
  schemas:
    FLOWResult:
      type: object
      description: Description of the current state of a flow
      x-examples:
        example:
          elements:
            - type: display
              data:
                text: |-
                  Coordineer de oplossing en kies de juiste bewaking.
                  Wat moet er met de klacht gebeuren?
            - type: select
              data:
                outputKey: choice
                list:
                  - value: 0
                    text: Spoedeisend (<2 werkdagen)
                  - value: 1
                    text: Normaal (<10 werkdagen)
                  - value: 2
                    text: Klacht afwijzen
          _requireComment: false
          ID: 1425
          debug:
            - id: 3k8itoecmyl4efp9
              state:
                ruimte: slaapkamer
                element: kraan
              activeNode:
                id: 7
                label: Beoordelen klacht
                trace:
                  completedLabel: Klacht beoordeeld
                deadline:
                  duration: PT8H
                  nodeId: 0
                handler:
                  handlerId: 1014
                actions:
                  - data:
                      name: Ask_question
                      stateObj:
                        question: |-
                          Coordineer de oplossing en kies de juiste bewaking.
                          Wat moet er met de klacht gebeuren?
                        options:
                          - text: Spoedeisend (<2 werkdagen)
                            type: transition
                            value: 11
                          - text: Normaal (<10 werkdagen)
                            type: transition
                            value: 12
                          - text: Klacht afwijzen
                            type: transition
                            value: 13
                      configObj: {}
                      outputKey: ''
              code: Klachten
              trace:
                - 7
            - id: ipfjn4lh7fi12d0-
              state:
                question: |-
                  Coordineer de oplossing en kies de juiste bewaking.
                  Wat moet er met de klacht gebeuren?
                options:
                  - text: Spoedeisend (<2 werkdagen)
                    type: transition
                    value: 11
                  - text: Normaal (<10 werkdagen)
                    type: transition
                    value: 12
                  - text: Klacht afwijzen
                    type: transition
                    value: 13
              activeNode:
                id: 1
                label: Start
                actions:
                  - data:
                      elements:
                        - type: display
                          data:
                            $text: question
                        - type: select
                          data:
                            outputKey: choice
                            $list: 'options.map((option, index) => ({value: index, text: option.text}))'
                      $_requireComment: '(state._requireComment !== undefined ? state._requireComment : false)'
                  - data:
                      stateObj: {}
                      configObj: {}
                      outputKey: ''
                      $name: 'options[choice].value'
                    conditionText: "options[choice].type == 'flow'"
                  - data:
                      $nodeId: 'options[choice].value'
                    conditionText: "options[choice].type == 'transition'"
                  - data:
                      output: ''
              code: Ask_question
              trace:
                - 1
          deadline: false
      properties:
        ID:
          type: integer
          example: 3824
          description: This is the ID of the instance of the flow. This ID is needed in a following request to be able to continue to the next step.
        debug:
          type: object
          minProperties: 0
          description: Shows debug information about the current state of the flow
          properties:
            id:
              type: string
              example: 12p89urdio4
            state:
              type: object
              description: The state contains all the key/values of all parameters loaded into the state
            activeNode:
              type: object
              example:
                '4': null
              description: activeNode describes the active node
              properties:
                id:
                  type: integer
                  description: The ID of the activeNode
                label:
                  type: string
                  description: The label of the activeNode
                trace:
                  type: string
                deadline:
                  type: object
                  description: The deadline of the active node
                  properties:
                    duration:
                      type: string
                    nodeId:
                      type: string
                actions:
                  type: array
                  items:
                    type: object
            code:
              type: string
              example: Klachten_afhandelen
            trace:
              type: array
              items:
                type: integer
                example: null
        elements:
          type: array
          description: Elements are the elements connected to the current node.
          minItems: 0
          maxItems: 20
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - display
                  - select
                  - input
                  - link
                  - remote-select
                description: The type defines the type of the element connected to the node.
              data:
                anyOf:
                  - $ref: '#/components/schemas/ElementSelect'
                  - $ref: '#/components/schemas/ElementDisplay'
                  - $ref: '#/components/schemas/ElementInput'
                  - $ref: '#/components/schemas/ElementLink'
                  - $ref: '#/components/schemas/ElementRemoteSelect'
        deadline:
          type: boolean
          description: This is the deadline of the flow. In a decision tree flow this is not relevant.
        _requireComment:
          type: boolean
      required:
        - ID
        - elements
    ElementSelect:
      title: ElementSelect
      type: object
      x-examples:
        example:
          outputKey: choice
          list:
            - value: 0
              text: Spoedeisend (<2 werkdagen)
            - value: 1
              text: Normaal (<10 werkdagen)
            - value: 2
              text: Klacht afwijzen
      description: type select
      properties:
        List:
          type: array
          description: This is the list of options of the select
          items:
            type: object
            properties:
              value:
                type: string
                description: The value of an option. Use these value further.
              text:
                type: string
                description: The text of an option. This text is only for displaying purposes. Do not use it in a e.g. a condition
        outputKey:
          type: string
          description: This is the name of the parameter where the value that is chosen will be saved in.
    ElementDisplay:
      title: ElementDisplay
      type: object
      x-examples:
        example:
          text: |-
            Coordineer de oplossing en kies de juiste bewaking.
            Wat moet er met de klacht gebeuren?
      description: type display
      properties:
        text:
          type: string
          description: This is the text that will be displayed.
    ElementInput:
      title: ElementInput
      type: object
      description: type input
      properties:
        outputKey:
          type: string
          description: This is the name of the parameter where the value that is given will be saved in.
        required:
          type: boolean
          description: Defines if an input is required
        pattern:
          type: string
          description: The pattern defines the format of the value of the input. This pattern can e.g. force that the inputed value must be a zipcode.
          example: "'{\\A[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])\\z}';"
    ElementLink:
      title: ElementLink
      type: object
      description: type link
      properties:
        url:
          type: string
          description: To this url will be navigated when the link is clickedor chosen.
          format: uri
        text:
          type: string
          description: The text of the link
        target:
          type: string
          description: A target attribut
    ElementRemoteSelect:
      title: ElementRemoteSelect
      type: object
      description: type remote-select
      x-examples: {}
      properties:
        query:
          type: string
          description: url that should be executed
          format: uri
        outputKey:
          type: string
          description: The name of the variable where the result of the query will be saved.
        required:
          type: boolean
          description: Defines if the outputKey should contain a value.
      required:
        - query
        - outputKey
    Authentication:
      title: Authentication
      type: object
      description: Describes the result of an authenticated user.
      properties:
        user:
          type: object
          required:
            - ID
            - fullName
            - profileImage
            - language
          description: Returns the user object
          properties:
            ID:
              type: integer
              description: ID of the user that requested a token
            fullName:
              type: string
              description: Full name of the user that requested a token
            profileImage:
              type: string
              description: url of the profile image of the user that requested a token
              format: uri
            language:
              type: string
              description: default language of the user that requested a token
              example: '"nl"'
        token:
          type: string
          description: Token than can be used in following requests
        refreshToken:
          type: string
      required:
        - user
        - token
        - refreshToken
  securitySchemes: {}
